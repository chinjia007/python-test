{
  "totalLevels": 25,
  "levels": [
    {
      "level": 1,
      "title": "Python编程基础入门",
      "description": "学习Python基础语法、变量操作、函数使用及程序结构，掌握编程核心概念与简单应用。"
    },
    {
      "level": 2,
      "title": "编程基础与图形绘制 ",
      "description": "通过Python的循环结构、代码规范及turtle库的图形绘制功能，掌握编程核心逻辑与坐标系应用，实现动态图形创作。"
    },
    {
      "level": 3,
      "title": "Python编程核心要素",
      "description": "通过图形绘制等实践应用，掌握循环结构、变量控制、函数使用及数据操作等Python基础编程要素。"
    },
    {
      "level": 4,
      "title": "基础语法与结构  ",
      "description": "掌握Python基本数据类型操作、流程控制与输入输出处理，通过实例理解列表操作、分支结构和条件判断等核心编程逻辑。"
    },
    {
      "level": 5,
      "title": "逻辑控制",
      "description": "学习条件判断、布尔运算与自定义函数的综合运用，掌握Python程序逻辑控制的核心技巧。"
    },
    {
      "level": 6,
      "title": "算法基础与核心技巧  ",
      "description": "掌握算法思想、取余取整操作及贪心策略，提升程序设计与问题解决的核心能力。"
    },
    {
      "level": 7,
      "title": "字符串处理与倒序技巧",
      "description": "Python字符串的索引、切片、倒序操作及常用方法，帮助学员掌握高效的文本处理与数据操作技巧。"
    },
    {
      "level": 8,
      "title": "程序控制与效率优化",
      "description": "流程控制、算法实现及性能测量，掌握利用穷举法和函数优化提升代码效率的技巧。"
    },
    {
      "level": 9,
      "title": "编程核心基础  ",
      "description": "数据结构、流程控制及常用算法，提升编程思维与问题解决能力。"
    },
    {
      "level": 10,
      "title": "列表操作与排序算法",
      "description": "列表元素的增删改查、排序算法实现和字符串比较等核心数据处理技巧。"
    },
    {
      "level": 11,
      "title": "文件与数据持久化处理",
      "description": "文件操作、字符串处理及JSON格式的使用，掌握数据存储、转换和交换的核心技能。"
    },
    {
      "level": 12,
      "title": "数据可视化❶",
      "description": "使用pyecharts库进行统计数据处理、绘制交互式图表（柱状图/折线图）及自定义标签的核心技能，并通过官方文档拓展可视化能力。"
    },
    {
      "level": 13,
      "title": "数据可视化❷",
      "description": "饼状图与雷达图的绘制技巧，学习数据处理与图表生成的核心方法。"
    },
    {
      "level": 14,
      "title": "数据演变可视化技术",
      "description": "绘制漏斗图、河流图等可视化工具，动态展示生物多样性及能量结构随时代变迁的演变趋势。"
    },
    {
      "level": 15,
      "title": "数据智能",
      "description": "数据处理、可视化及机器学习技术，从数据清洗到分类模型构建，全面提升数据科学与AI应用能力。"
    },
    {
      "level": 16,
      "title": "图像处理❶",
      "description": "使用Pillow和Matplotlib库进行图像格式转换、编辑操作及动态命名保存，掌握剪裁、旋转、缩略图等核心技巧，实现多图可视化展示。"
    },
    {
      "level": 17,
      "title": "文件自动化管理",
      "description": "使用Python进行文件操作、图像处理及自动化管理，包括递归归档、蒙太奇合成和点阵布局等实用技巧。"
    },
    {
      "level": 18,
      "title": "图像处理❷",
      "description": "使用Python进行颜色模式转换、像素操作、文字渲染及图像效果实现的数字图像处理技术。"
    },
    {
      "level": 19,
      "title": "图像处理❸",
      "description": "使用Python进行图像处理与生成的实用技巧，包括色阶调整、字符画转换、透明度操作及圆形头像制作等综合应用。"
    },
    {
      "level": 20,
      "title": "图像转字符动画技术",
      "description": "利用Python处理GIF动态图、生成彩色字符动画，并优化字符画效果的编程技巧。"
    },
    {
      "level": 21,
      "title": "面向对象的Python Qt GUI开发 ",
      "description": "使用PySide2和Qt Creator，结合类、继承等OOP概念构建交互式图形界面应用。"
    },
    {
      "level": 22,
      "title": "PyQt界面开发核心组件",
      "description": "使用PyQt5构建功能丰富的GUI应用，涵盖控件、布局、信号槽及常用功能模块的实践应用。"
    },
    {
      "level": 23,
      "title": "图像应用开发",
      "description": "使用Python结合Qt框架进行图像处理、GUI界面设计及高效编程实践的全流程开发技能。"
    },
    {
      "level": 24,
      "title": "交互式应用开发",
      "description": "使用Python构建交互式图形界面应用，涵盖控件操作、事件处理、异常机制及常用功能模块的综合应用。"
    },
    {
      "level": 25,
      "title": "GUI开发  ",
      "description": "使用Python实现图形用户界面中的控件操作、定时任务及显示优化等核心功能。"
    }
  ]
}