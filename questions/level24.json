{
    "title": "生成器",
    "questions": [
        {
            "id": 1,
            "question": "获取输入框内容应该用哪个方法？",
            "type": "multiple-choice",
            "options": [
                "get()",
                "text()",
                "value()",
                "input()"
            ],
            "answer": 1,
            "explanation": "`text()` 是获取输入框内容的正确方法，其他选项是其他编程语言或错误写法。",
            "preserveFormat": true
        },
        {
            "id": 2,
            "question": "清空输入框的正确代码是？",
            "type": "multiple-choice",
            "options": [
                "line_edit.delete()",
                "line_edit.clear()",
                "line_edit.setText(\"\")",
                "line_edit.empty()"
            ],
            "answer": 1,
            "explanation": "`clear()` 是专门用于清空输入框的方法，虽然C选项也能实现，但B更直接。",
            "preserveFormat": true
        },
        {
            "id": 3,
            "question": "异常处理的作用是什么？",
            "type": "multiple-choice",
            "options": [
                "让程序更快",
                "预防程序崩溃",
                "美化界面",
                "删除文件"
            ],
            "answer": 1,
            "explanation": "`try...except...` 的作用是捕获错误，防止程序意外停止。",
            "preserveFormat": true
        },
        {
            "id": 4,
            "question": "随机选择3个不重复元素应该用？",
            "type": "multiple-choice",
            "options": [
                "random.choice()",
                "random.sample()",
                "random.shuffle()",
                "random.randint()"
            ],
            "answer": 1,
            "explanation": "`sample()` 可以从列表中随机选取多个不重复元素，其他方法不符合需求。",
            "preserveFormat": true
        },
        {
            "id": 5,
            "question": "绑定按钮点击事件的代码是？",
            "type": "multiple-choice",
            "options": [
                "button.link(click_event)",
                "button.connect(click_event)",
                "button.bind(click_event)",
                "button.clicked(click_event)"
            ],
            "answer": 1,
            "explanation": "在PyQt中，`connect()` 是绑定事件的正确方法。",
            "preserveFormat": true
        },
        {
            "id": 6,
            "question": "以下哪个代码能正确捕获除零错误？",
            "type": "multiple-choice",
            "options": [
                "try: 1/0",
                "try: 1/0 except:",
                "try: 1/0 except ZeroDivisionError:",
                "try: 1/0 except Error:"
            ],
            "answer": 2,
            "explanation": "必须明确写出 `ZeroDivisionError` 才能正确捕获这种错误。",
            "preserveFormat": true
        },
        {
            "id": 7,
            "question": "异常处理必须使用 `finally` 语句块。",
            "type": "true-false",
            "options": [
                "正确",
                "错误"
            ],
            "answer": false,
            "explanation": "`finally` 是可选的，`try...except` 就足够处理基本异常。",
            "preserveFormat": true
        },
        {
            "id": 8,
            "question": "`line_edit.setText(\"\")` 可以清空输入框。",
            "type": "true-false",
            "options": [
                "正确",
                "错误"
            ],
            "answer": true,
            "explanation": "虽然 `clear()` 更直接，但设置空字符串也能达到同样效果。",
            "preserveFormat": true
        },
        {
            "id": 9,
            "question": "处理文件找不到的异常类型是__________。",
            "type": "fill-in",
            "answer": [
                "FileNotFoundError"
            ],
            "explanation": "打开文件时如果文件不存在，会触发 `FileNotFoundError`。",
            "preserveFormat": true
        },
        {
            "id": 10,
            "question": "输入框对象叫 `line_edit`，获取内容并赋值给变量应写：text = __________。",
            "type": "fill-in",
            "answer": [
                "line_edit.text()"
            ],
            "explanation": "必须通过 `text()` 方法获取输入框的文本内容。",
            "preserveFormat": true
        },
        {
            "id": 11,
            "question": "想让按钮显示图片应该设置哪个属性？",
            "type": "multiple-choice",
            "options": [
                "picture",
                "image",
                "photo",
                "bgimg"
            ],
            "answer": 1,
            "explanation": "在Python的GUI编程中，按钮显示图片要使用image属性来设置，就像给相框插入照片一样",
            "preserveFormat": true
        },
        {
            "id": 12,
            "question": "random.sample([3,5,7,9],2)可能得到什么结果？",
            "type": "multiple-choice",
            "options": [
                "[3,5]",
                "[7,7]",
                "[5,9]",
                "[3,3]"
            ],
            "answer": 2,
            "explanation": "sample()会随机选取不重复的元素，就像从小组里随机选2个不重复的同学",
            "preserveFormat": true
        },
        {
            "id": 13,
            "question": "哪个函数能把两个列表像拉链一样配对？",
            "type": "multiple-choice",
            "options": [
                "map()",
                "zip()",
                "join()",
                "merge()"
            ],
            "answer": 1,
            "explanation": "zip()就像拉链的齿牙，把两个列表的对应元素一一配对，如zip([1,2],[\"a\",\"b\"])得到(1,\"a\"),(2,\"b\")",
            "preserveFormat": true
        },
        {
            "id": 14,
            "question": "网格布局中，row和column参数的作用是？",
            "type": "multiple-choice",
            "options": [
                "设置组件大小",
                "确定组件位置",
                "改变组件颜色",
                "调整组件间距"
            ],
            "answer": 1,
            "explanation": "row像教室的排数，column像列数，共同确定组件在网格中的位置",
            "preserveFormat": true
        },
        {
            "id": 15,
            "question": "创建多个相似按钮时，使用什么结构最合适？",
            "type": "multiple-choice",
            "options": [
                "多个if语句",
                "for循环",
                "while循环",
                "try-except"
            ],
            "answer": 1,
            "explanation": "for循环可以批量创建按钮，就像用模具批量制作饼干",
            "preserveFormat": true
        },
        {
            "id": 16,
            "question": "LCD显示控件更新内容应该用哪个方法？",
            "type": "multiple-choice",
            "options": [
                "update()",
                "refresh()",
                "config()",
                "reload()"
            ],
            "answer": 2,
            "explanation": "config()方法就像给显示器发送新指令，告诉它要显示新内容",
            "preserveFormat": true
        },
        {
            "id": 17,
            "question": "网格布局中行号和列号从1开始计数",
            "type": "true-false",
            "options": [
                "正确",
                "错误"
            ],
            "answer": false,
            "explanation": "网格的行列编号像楼层索引，应该从0开始计数",
            "preserveFormat": true
        },
        {
            "id": 18,
            "question": "zip()函数生成的结果可以直接用list()查看",
            "type": "true-false",
            "options": [
                "正确",
                "错误"
            ],
            "answer": true,
            "explanation": "zip()返回的是迭代器对象，用list()转换就像把流动的水装进水杯查看",
            "preserveFormat": true
        },
        {
            "id": 19,
            "question": "用random.sample()从26个字母中选5个不重复的，补全代码： \nletters = [chr(i) for i in range(65,91)] \nselected = ______(letters,5)",
            "type": "fill-in",
            "answer": [
                "random.sample"
            ],
            "explanation": "sample()第一个参数是数据源，第二个是要选取的数量",
            "preserveFormat": true
        },
        {
            "id": 20,
            "question": "同时遍历按钮文字和位置应该用： for text, pos in zip(______, positions):",
            "type": "fill-in",
            "answer": [
                "texts"
            ],
            "explanation": "zip()需要两个可迭代对象，这里假设texts是预定义的按钮文字列表",
            "preserveFormat": true
        }
    ]
}