{
    "title": "继承与多态",
    "questions": [
        {
            "id": 1,
            "question": "Label控件的主要作用是？",
            "type": "multiple-choice",
            "options": [
                "输入密码",
                "显示不可修改的文字",
                "弹出新窗口",
                "播放音乐"
            ],
            "answer": 1,
            "explanation": "Label控件专门用于显示文字或图片，用户无法直接修改其内容。",
            "preserveFormat": true
        },
        {
            "id": 2,
            "question": "创建按钮的正确代码是？",
            "type": "multiple-choice",
            "options": [
                "tkinter.Label(text=\"确定\")",
                "tkinter.Button(text=\"确定\")",
                "tkinter.ComboBox(values=[\"确定\"])",
                "tkinter.Text(text=\"确定\")"
            ],
            "answer": 1,
            "explanation": "Button控件用于创建按钮，text参数定义按钮上显示的文字。",
            "preserveFormat": true
        },
        {
            "id": 3,
            "question": "Combo Box控件最适合的场景是？",
            "type": "multiple-choice",
            "options": [
                "显示多行文本",
                "让用户从下拉列表中选择一个选项",
                "绘制彩色矩形",
                "播放音效"
            ],
            "answer": 1,
            "explanation": "Combo Box通过下拉列表形式提供预定义选项供用户选择。",
            "preserveFormat": true
        },
        {
            "id": 4,
            "question": "同时使用pack()和grid()布局会发生什么？",
            "type": "multiple-choice",
            "options": [
                "界面更美观",
                "程序直接报错",
                "控件重叠显示",
                "自动切换布局方式"
            ],
            "answer": 1,
            "explanation": "同一容器内的控件必须使用单一布局管理器，混用会导致程序报错。",
            "preserveFormat": true
        },
        {
            "id": 5,
            "question": "按钮点击后触发事件的机制叫？",
            "type": "multiple-choice",
            "options": [
                "信号与槽",
                "魔法函数",
                "循环监听",
                "条件判断"
            ],
            "answer": 0,
            "explanation": "信号与槽机制通过事件（如点击）触发绑定的函数（槽函数）。",
            "preserveFormat": true
        },
        {
            "id": 6,
            "question": "用grid()布局时，设置控件在第2行第3列的代码是？",
            "type": "multiple-choice",
            "options": [
                ".grid(row=2, column=3)",
                ".grid(line=2, col=3)",
                ".grid(x=2, y=3)",
                ".grid(row=3, column=2)"
            ],
            "answer": 0,
            "explanation": "grid布局中row表示行号，column表示列号，均从0开始计数。",
            "preserveFormat": true
        },
        {
            "id": 7,
            "question": "Label控件可以让用户输入文字。",
            "type": "true-false",
            "options": [
                "正确",
                "错误"
            ],
            "answer": false,
            "explanation": "Label仅用于显示内容，输入文本需使用Entry或Text控件。",
            "preserveFormat": true
        },
        {
            "id": 8,
            "question": "使用布局管理器（如pack/grid）后，控件才会显示在窗口中。",
            "type": "true-false",
            "options": [
                "正确",
                "错误"
            ],
            "answer": true,
            "explanation": "布局管理器决定控件的位置和尺寸，未调用则控件不可见。",
            "preserveFormat": true
        },
        {
            "id": 9,
            "question": "要让按钮被点击时执行函数show_message，需要设置它的______参数。",
            "type": "fill-in",
            "answer": [
                "command"
            ],
            "explanation": "Button的command参数用于绑定点击事件触发的函数。",
            "preserveFormat": true
        },
        {
            "id": 10,
            "question": "给Combo Box添加选项[\"苹果\",\"香蕉\",\"橘子\"]，需要设置______属性。",
            "type": "fill-in",
            "answer": [
                "values"
            ],
            "explanation": "values属性接收列表类型数据，用于定义下拉框的选项内容。",
            "preserveFormat": true
        },
        {
            "id": 11,
            "question": "哪个模块可以创建文件选择对话框？",
            "type": "multiple-choice",
            "options": [
                "sys",
                "os",
                "QFileDialog",
                "math"
            ],
            "answer": 2,
            "explanation": "QFileDialog是专门用来创建文件选择对话框的模块，用于在程序中实现文件选择功能。",
            "preserveFormat": true
        },
        {
            "id": 12,
            "question": "当下拉框选项变化时，应该连接什么信号？",
            "type": "multiple-choice",
            "options": [
                "clicked()",
                "currentIndexChanged()",
                "textChanged()",
                "pressed()"
            ],
            "answer": 1,
            "explanation": "currentIndexChanged信号在下拉框的选项序号变化时触发，用于响应选项变更事件。",
            "preserveFormat": true
        },
        {
            "id": 13,
            "question": "显示网页需要用什么控件？",
            "type": "multiple-choice",
            "options": [
                "QLabel",
                "QWebEngineView",
                "QLineEdit",
                "QPushButton"
            ],
            "answer": 1,
            "explanation": "QWebEngineView控件内置浏览器引擎，能够加载并显示网页内容。",
            "preserveFormat": true
        },
        {
            "id": 14,
            "question": "保存文件对话框返回的是什么？",
            "type": "multiple-choice",
            "options": [
                "文件内容",
                "文件路径",
                "文件大小",
                "文件图标"
            ],
            "answer": 1,
            "explanation": "保存对话框仅返回用户选择的文件路径，具体文件操作需要开发者自行实现。",
            "preserveFormat": true
        },
        {
            "id": 15,
            "question": "哪个方法能让网页控件加载百度？",
            "type": "multiple-choice",
            "options": [
                "setHtml(\"www.baidu.com\")",
                "load(\"http://www.baidu.com\")",
                "open(\"百度\")",
                "show(\"www.baidu.com\")"
            ],
            "answer": 1,
            "explanation": "load()方法需要完整的URL格式，必须包含http://或https://协议头。",
            "preserveFormat": true
        },
        {
            "id": 16,
            "question": "连接信号和槽应该用哪个方法？",
            "type": "multiple-choice",
            "options": [
                "connect()",
                "link()",
                "bind()",
                "join()"
            ],
            "answer": 0,
            "explanation": "connect()是Qt框架中实现信号与槽机制的标准方法。",
            "preserveFormat": true
        },
        {
            "id": 17,
            "question": "字符串\"Hello\"[1:3]的切片结果是\"el\"？",
            "type": "true-false",
            "options": [
                "正确",
                "错误"
            ],
            "answer": true,
            "explanation": "索引1是'e'，索引3是'l'，切片取左闭右开区间[1,3)，结果为\"el\"。",
            "preserveFormat": true
        },
        {
            "id": 18,
            "question": "函数定义时必须指定参数类型？",
            "type": "true-false",
            "options": [
                "正确",
                "错误"
            ],
            "answer": false,
            "explanation": "Python是动态类型语言，函数定义时不需要声明参数类型。",
            "preserveFormat": true
        },
        {
            "id": 19,
            "question": "获取用户输入的文本应该用________对话框",
            "type": "fill-in",
            "answer": [
                "QInputDialog"
            ],
            "explanation": "QInputDialog提供简单的文本输入交互界面，支持单行文本输入。",
            "preserveFormat": true
        },
        {
            "id": 20,
            "question": "让网页控件显示内容的代码：webview.________(url)",
            "type": "fill-in",
            "answer": [
                "load"
            ],
            "explanation": "load()是QWebEngineView的核心方法，用于加载指定URL的网页内容。",
            "preserveFormat": true
        }
    ]
}